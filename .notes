// trader tournaments

- todo 

  - what do we need

    - metamask login detection state
    - react router
    - 
    - web3 
    - material ui
    - redux state tree
      - current product 
        - graph 
        - tournaments

FILE STRUCTURE 

src
  components
    App
    Navigation
    ProductSelection
    Graph
    Game
    GameList
    
  views / HOC injects logic into view component

    ProductSelection 
      - ProductSelection

    ProductSelected (get the state of the sleected asset factory, and games)
      - Graph
      - GameSelection / GameSelected
      
    GameList 
      - list of games
      - create games that add to list of games
    
    GameSelected
      - Game


PLANNING

  GameList
    - theres is static data
      - duration
      - prediction period 
      - resolution period 
      - cost to predict
      - name
      - asset
    - there is data that needs to be subscribed to
      - fee_collected x 
      - price_has_settled (dont need if we listen for price to finalize )
      - balance (is used for tournament creator and )
      - total predicted x
      - players total stake (contract doesnt support directly, but total player predictions x cost to predict ===)
      - positions () x 
      - all predicted prices x 
      - prediction_number (useless)
      - winning_prediction x
      - ETHUSD x & t
      - #winners 
    - there is data that determines state
      - before start
      - game start
      - game ended / resolution
      - resolution over
      - 
    - functionality to create a new game
    - 
      

    
  contract changes
    factory shouldnt have name option (just restrict creators)


  ONGOING todo
  - isLoading loads on first game instead of waiting\
  - change subscribing to game state to only subscribe when a game is selected
  - styling 
    - need more intricate plans for styling 
    - Game 
      - predict 
      - claim winning prediction
      - collect winnings

  State Tree    